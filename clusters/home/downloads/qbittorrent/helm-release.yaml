---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      chart: qbittorrent
      version: 13.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      tag: v4.3.9
      pullPolicy: Always

    podAnnotations:
      backup.velero.io/backup-volumes: "config"

    podSecurityContext:
      supplementalGroups:
        - 100

    service:
      main:
        ports:
          http:
            port: 8080
      ui:
        enabled: true
        type: LoadBalancer
        ports:
          ui:
            enabled: true
            port: 8080
            protocol: TCP
            targetPort: 8080

    env:
      TZ: "Europe/Amsterdam"
      UMASK: "022"

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          cert-manager.io/issue-temporary-certificate: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "file-download-outline"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: network-rfc1918-ips@kubernetescrd
        hosts:
          - host: qbittorrent.${SECRET_DOMAIN}
            paths:
              - path: /
        tls:
          - hosts:
              - qbittorrent.${SECRET_DOMAIN}
            secretName: "qbittorrent-tls"

    resources:
      requests:
        cpu: "0.3"
        memory: "250Mi"
      limits:
        memory: "4000Mi"

    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
      media:
        enabled: true
        existingClaim: downloads

    addons:
      vpn:
        enabled: true
        type: openvpn
        openvpn:
          authSecret: openvpn-auth
        env:
          FIREWALL: 'on'
          ROUTE_1: ${NETWORK_K8S_CLUSTER_CIDR}
          ROUTE_2: ${NETWORK_K8S_SERVICE_CIDR}
          ROUTE_3: ${NETWORK_SERVER_CIDR}
          VPNPORT_1: "9091"
        configFileSecret: openvpn-config
        scripts:
          up: |-
            #!/bin/bash
            /etc/openvpn/up.sh
            echo "connected" > /shared/vpnstatus
          down: |-
            #!/bin/bash
            /etc/openvpn/down.sh
            echo "disconnected" > /shared/vpnstatus
