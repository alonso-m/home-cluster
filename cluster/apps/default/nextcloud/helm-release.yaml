---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 2.9.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: nextcloud
      tag: stable-apache
    env:
      TZ: Europe/Amsterdam
      REDIS_HOST: localhost
      POSTGRES_HOST: postgres
      POSTGRES_DB: nextcloud
      SMTP_HOST: smtp.gmail.com
      SMTP_SECURE: ssl
      MAIL_FROM_ADDRESS: cloud
      OVERWRITEPROTOCOL: https
    envFrom:
      - secretRef:
          name: nextcloud
      - secretRef:
          name: database
      - secretRef:
          name: redis

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
#          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
#          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          cert-manager.io/issue-temporary-certificate: "true"
          # hajimari.io/enable: "true"
          # hajimari.io/icon: "shield-key"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: vault.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: 3012
              - path: /notifications/hub/negotiate
                pathType: Prefix
        tls:
          - hosts:
              - vault.${SECRET_DOMAIN}
            secretName: "vault-tls"
      admin:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
#          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        hosts:
          - host: vault.${SECRET_DOMAIN}
            paths:
              - path: /admin
                pathType: Prefix
        tls:
          - hosts:
              - vault.${SECRET_DOMAIN}
            secretName: "vault-tls"

    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config-v1
#    podAnnotations:
#      backup.velero.io/backup-volumes: config
#      pre.hook.backup.velero.io/container: fsfreeze
#      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
#      post.hook.backup.velero.io/container: fsfreeze
#      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
#      secret.reloader.stakater.com/reload: "vaultwarden"
#    resources:
#      requests:
#        memory: 100Mi
#        cpu: 100m
#      limits:
#        memory: 2000Mi
#    additionalContainers:
#      fsfreeze:
#        name: fsfreeze
#        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
#        volumeMounts:
#          - name: config
#            mountPath: /config
#        securityContext:
#          privileged: true
